import React, { useState } from 'react';
import background from '../../assets/background.png';
import { Mail, MapPin, Phone, Calendar, ArrowUpRight } from "lucide-react";
import { useDispatch, useSelector } from "react-redux";
import { submitForm } from "../../redux/slice/formSlice.js";
import * as Yup from "yup";
import { Formik, Form, Field, ErrorMessage } from "formik";


const ContactUs = () => {
  const contactDetails = [
    {
      title: "Mail Us 24/7",
      details: [
        "no-reply@mubychem.com",
        "support@MubyChem.com",
      ],
      icon: <Mail className="text-blue-500" size={32} />,
    },
    {
      title: "Our Location",
      details: [
        "Sandhrust road ",
        "Dongri  Mumbai  ",
      ],
      icon: <MapPin className="text-blue-500" size={32} />,
    },
    {
      title: "Call US 24/7",
      details: [
        "Phone: +001 236-895-4732",
        "Mobile: +9123 895-4732-236",
      ],
      icon: <Phone className="text-blue-500" size={32} />,
    },
    {
      title: "Working Days",
      details: [
        "Mon to Fri - 09:00am To 06:00pm",
        "Saturday to Sunday - Closed",
      ],
      icon: <Calendar className="text-blue-500" size={32} />,
    },
  ];

  const dispatch = useDispatch();
  const { status, error } = useSelector((state) => state.form);

  // Validation Schema using Yup
  const validationSchema = Yup.object({
    name: Yup.string().required("Name is required"),
    email: Yup.string().email("Invalid email format").required("Email is required"),
    phone: Yup.string()
      .matches(/^\d{10}$/, "Phone number must be exactly 10 digits")
      .required("Phone number is required"),
    subject: Yup.string(),
    message: Yup.string(),
  });
  return (
    <>

      {/* contactus image Section  */}
      <div
        className="relative h-[400px] bg-cover rounded-3xl overflow-hidden mx-4 md:mx-10"
        style={{ backgroundImage: `url(${background})` }}
      >
        {/* Dark overlay */}
        <div className="absolute inset-0 bg-black opacity-50"></div>

        <div className="absolute inset-0 flex items-center justify-center">
          <div className="text-center">
            <h1 className="text-white text-5xl font-bold mb-4">Contact Us</h1>
            <p className="text-white text-lg mb-8">XLEB &gt; CONTACT US</p>
          </div>
        </div>
      </div>
      {/* contact info section  */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 px-6 py-10 bg-blue-50 mt-15">
        {contactDetails.map((contact, index) => (
          <div key={index} className="relative bg-white p-6 rounded-xl shadow-lg flex flex-col justify-between border border-gray-200">
            <div>
              <h3 className="text-xl font-semibold text-gray-900 mb-2">{contact.title}</h3>
              {contact.details.map((detail, idx) => (
                <p key={idx} className="text-gray-600 text-sm">{detail}</p>
              ))}
            </div>
            <div className="flex justify-between items-center mt-6">
              <div className="bg-blue-100 p-4 rounded-lg">{contact.icon}</div>
              <div className="bg-white p-3 rounded-full shadow-md cursor-pointer hover:bg-gray-100 transition">
                <ArrowUpRight className="text-blue-500" size={20} />
              </div>
            </div>
          </div>
        ))}
      </div>


      <div className="w-full min-h-screen flex items-center justify-center bg-gray-100 p-6">
        <div className="w-full max-w-7xl bg-white shadow-lg rounded-3xl p-8 flex flex-col md:flex-row">
          {/* Left Side */}
          <div className="w-full md:w-1/2 p-6">
            <h2 className="text-4xl font-bold text-gray-900">Happy to Answer All Your Questions</h2>
            <p className="text-gray-600 mt-4">
              We carefully screen all of our cleaners, so you can rest assured that your home would receive the absolute highest quality of service.
            </p>
            <button className="mt-6 bg-blue-600 text-white px-6 py-3 rounded-lg flex items-center gap-2 hover:bg-blue-700 transition">
              More Details →
            </button>
          </div>

          {/* Right Side (Form) */}
          <div className="w-full md:w-1/2 p-6">
            <h3 className="text-2xl font-semibold text-gray-900">Send a message to staff</h3>
            <p className="text-gray-500 text-sm">Your email address will not be published. Required fields are marked *</p>

            <Formik
              initialValues={{
                name: "",
                email: "",
                phone: "",
                subject: "",
                message: "",
              }}
              validationSchema={validationSchema}
              onSubmit={(values, { resetForm }) => {
                dispatch(submitForm(values));
                resetForm();
              }}
            >
              {({ isSubmitting }) => (
                <Form className="mt-4 space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Field type="text" name="name" placeholder="Your Name" className="w-full p-3 border rounded-lg" />
                      <ErrorMessage name="name" component="p" className="text-red-500 text-sm" />
                    </div>
                    <div>
                      <Field type="email" name="email" placeholder="Your Email" className="w-full p-3 border rounded-lg" />
                      <ErrorMessage name="email" component="p" className="text-red-500 text-sm" />
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                      <Field type="tel" name="phone" placeholder="Your Phone" className="w-full p-3 border rounded-lg" />
                      <ErrorMessage name="phone" component="p" className="text-red-500 text-sm" />
                    </div>
                    <div>
                      <Field type="text" name="subject" placeholder="Subject" className="w-full p-3 border rounded-lg" />
                    </div>
                  </div>

                  <div>
                    <Field as="textarea" name="message" placeholder="Message" className="w-full p-3 border rounded-lg h-28" />
                  </div>

                  <div className="flex items-center">
                    <input type="checkbox" className="mr-2" />
                    <label className="text-sm text-gray-600">
                      Save my name, email, and website in this browser for the next time I comment.
                    </label>
                  </div>

                  {status === "loading" || isSubmitting ? (
                    <button disabled className="w-full py-3 bg-gray-400 text-white rounded-lg">Submitting...</button>
                  ) : (
                    <button type="submit" className="w-full py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition">
                      Get Cost Estimate →
                    </button>
                  )}
                </Form>
              )}
            </Formik>

            {status === "success" && <p className="text-green-500 mt-2">Form submitted successfully!</p>}
            {error && <p className="text-red-500 mt-2">Error: {error}</p>}
          </div>
        </div>
      </div>
    </>
  );
};

export default ContactUs;